import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;

// DO NOT EDIT THIS FILE!!!
// This file contains the testing scripts for the program.
// The file you should edit is "MillerRabin.java"
public class Program
{
    public static void main(String[] args) throws Exception
    {
        if (args.length == 2)
        {
            long min = Long.parseLong(args[0]),
                 max = Long.parseLong(args[1]);
            rangedRun(min, max);
        }
        else if (args.length == 1)
        {
            long number = Long.parseLong(args[0]);
            singleRun(number);
        }
        else
        {
            Scanner scan = new Scanner(System.in);
            System.out.print("Enter number to evaluate, or 'r' to specify a range of numbers.\n > ");
            String numberStr = scan.nextLine();

            if (numberStr.equals("r"))
            {
                System.out.print("Min > ");
                long min = scan.nextLong();
                System.out.print("Max > ");
                long max = scan.nextLong();
                rangedRun(min, max);
            }
            else singleRun(Long.parseLong(numberStr));
            scan.close();
        }
    }

    public static void singleRun(long number) throws Exception
    {
        // Evaluate a single number.
        System.out.print("Evaluating...");

        long start = System.nanoTime(), end;
        boolean prime = MillerRabin.IsPrime(number);
        end = System.nanoTime();

        double time = (end - start) * 1e-9;
        if (prime) System.out.printf(" \u001b[1;32mPRIME\u001b[0m %.6f sec.\n", time);
        else System.out.printf(" \u001b[1;31mNOT PRIME\u001b[0m %.6f sec.\n", time);

        putResult(number, prime, time);
    }
    public static void rangedRun(long runStart, long runEnd) throws Exception
    {
        // Evaluate a group of numbers, from `runStart` to `runEnd`.
        System.out.println("Evaluating...");

        long start, end;
        boolean prime;
        for (long num = runStart; num <= runEnd; num++)
        {
            System.out.printf("%d...", num);
            start = System.nanoTime();
            prime = MillerRabin.IsPrime(num);
            end = System.nanoTime();

            double time = (end - start) * 1e-9;
            if (prime) System.out.printf(" \u001b[1;32mPRIME\u001b[0m %.6f sec.\n", time);
            else System.out.printf(" \u001b[1;31mNOT PRIME\u001b[0m %.6f sec.\n", time);

            putResult(num, prime, time);
        }
    }

    private static void putResult(long number, boolean result, double time) throws IOException
    {
        // Put a result in the debug file. Don't worry, this isn't included
        // when calculating the time.
        File file = new File("timings.csv");

        if (file.isFile())
        {
            FileWriter writer = new FileWriter(file, true);
            writer.write(String.format("%d,%b,%.6f\n", number, result, time));
            writer.close();
        }
        else
        {
            FileWriter writer = new FileWriter(file, true);
            writer.write(String.format("Number,Result,Time\n%d,%b,%f\n", number, result, time));
            writer.close();
        }
    }
}
